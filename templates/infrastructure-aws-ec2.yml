meta:
  environment: (( merge ))
  dns_root: (( merge ))
  security_groups: (( merge ))
  persistent_disk: 4096

  stemcell:
    name: bosh-aws-xen-ubuntu
    version: latest

  networks:
    app: default
    subnet: (( merge ))

  zookeepers:
    instances: (( merge || 3 ))
    instances_str: (( " " zookeepers.instances ))
  stardog:
    instances: (( merge || 3 ))
    instances_str: (( " " stardog.instances ))

networks:
- name: (( meta.networks.app ))
  type: manual
  subnets:
    - range: 10.0.0.0/24
      gateway: 10.0.0.1
      dns: [10.0.0.6, 10.0.0.2]
      reserved: [10.0.0.2-10.0.0.10]
      static: [10.0.0.11-10.0.0.100]
      cloud_properties:
        subnet: (( meta.networks.subnet ))

jobs:
  - name: zookeeper
    instances: (( meta.zookeepers.instances ))
    networks:
      - name: (( meta.networks.app ))
    persistent_disk_pool: small_disk
  - name: stardog
    instances: (( meta.stardog.instances ))
    networks:
      - name: (( meta.networks.app ))
        static_ips: (( static_ips(11,12,13) ))

    persistent_disk_pool: large_disk

compilation:
  cloud_properties:
    instance_type: m1.small

resource_pools:
  - name: small
    cloud_properties:
      instance_type: m1.small
  - name: large
    cloud_properties:
      instance_type: m1.small
  - name: default
    network: (( meta.networks.app ))
    stemcell:
      name: bosh-aws-xen-ubuntu-trusty-go_agent
      version: latest
    cloud_properties:
      instance_type: m1.small
      availability_zone: us-east-1a

disk_pools:
  - name: large_disk
    disk_size: (( merge || 0 ))
    cloud_properties:
      type: (( merge || "gp2" ))
  - name: small_disk
    disk_size: (( merge || 0 ))
    cloud_properties:
      type: (( merge || "gp2" ))

properties:
  zookeeper:
    members: (( "<%= '['+(0..." meta.zookeepers.instances_str ").collect { |i| \"#{i}.zookeeper.default.stardog-aws-ec2.microbosh\" }.join(\", \")+']' %>" ))
  stardog:
    cluster_members: (( jobs.stardog.networks.[0].static_ips ))

  # the following won't work since haproxy needs hostnames to be resolvable at startup,
  # but powerdns creates the record after the jobs are done
  # stardog:
  #  cluster_members: (( "<%= '['+(0..." meta.stardog.instances_str ").collect { |i| \"#{i}.stardog.default.stardog-aws-ec2.microbosh\" }.join(\", \")+']' %>" ))
